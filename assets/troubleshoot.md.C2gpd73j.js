import{_ as i,c as a,ag as s,o as t}from"./chunks/framework.CB8iguzh.js";const g=JSON.parse('{"title":"Troubleshooting","description":"","frontmatter":{},"headers":[],"relativePath":"troubleshoot.md","filePath":"troubleshoot.md","lastUpdated":null}'),n={name:"troubleshoot.md"};function r(o,e,l,h,p,d){return t(),a("div",null,e[0]||(e[0]=[s('<h1 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">â€‹</a></h1><p>ðŸ’¡ TIP: Run <code>:checkhealth orgmode</code> to check if Orgmode is correctly installed and configured.</p><h2 id="indentation-is-not-working" tabindex="-1">Indentation is not working <a class="header-anchor" href="#indentation-is-not-working" aria-label="Permalink to &quot;Indentation is not working&quot;">â€‹</a></h2><p>Make sure you are not overriding indentexpr in Org buffers with <a href="https://github.com/nvim-treesitter/nvim-treesitter#indentation" target="_blank" rel="noreferrer">nvim-treesitter indentation</a></p><h2 id="i-get-treesitterquerylua-errors-when-opening-agendacapture-prompt-or-org-files" tabindex="-1">I get <code>treesitter/query.lua</code> errors when opening agenda/capture prompt or org files <a class="header-anchor" href="#i-get-treesitterquerylua-errors-when-opening-agendacapture-prompt-or-org-files" aria-label="Permalink to &quot;I get `treesitter/query.lua` errors when opening agenda/capture prompt or org files&quot;">â€‹</a></h2><p>Tree-sitter parser might not be installed. Try running <code>:Org install_treesitter_grammar</code> to reinstall it.</p><h2 id="i-get-orgmodeparserorgso-is-not-a-valid-win32-application-on-windows" tabindex="-1">I get <code>.../orgmode/parser/org.so is not a valid Win32 application</code> on Windows <a class="header-anchor" href="#i-get-orgmodeparserorgso-is-not-a-valid-win32-application-on-windows" aria-label="Permalink to &quot;I get `.../orgmode/parser/org.so is not a valid Win32 application` on Windows&quot;">â€‹</a></h2><p>This issue can happen due to wrong C compiler being used for building the parser. By default, first one available from this list is chosen: <code>cc, gcc, clang, cl, zig</code> If you want to use a specific parser, you can override the <code>compilers</code> list before calling the <code>setup()</code> like this:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;orgmode.utils.treesitter.install&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compilers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clang&#39; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;orgmode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>After that, restart Neovim and run <code>:Org install_treesitter_grammar</code> to reinstall the parser.</p><p><a href="https://github.com/nvim-treesitter/nvim-treesitter/wiki/Windows-support#which-c-compiler-will-be-used" target="_blank" rel="noreferrer">nvim-treesitter</a> mentions the similar issue as part of their Windows troubleshooting section.</p><h2 id="dates-are-not-in-english" tabindex="-1">Dates are not in English <a class="header-anchor" href="#dates-are-not-in-english" aria-label="Permalink to &quot;Dates are not in English&quot;">â€‹</a></h2><p>Dates are generated with Lua native date support, and it reads your current locale when creating them.</p><br><p>To use different locale you can add this to your <code>init.lua</code>:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vim.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;language en_US.utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Just make sure you have <code>en_US</code> locale installed on your system. To see what you have available on the system you can start the command <code>:language</code> and press <code>&lt;TAB&gt;</code> to autocomplete possible options.</p><h2 id="chinese-characters-are-not-displayed-correctly-in-agenda" tabindex="-1">Chinese characters are not displayed correctly in agenda <a class="header-anchor" href="#chinese-characters-are-not-displayed-correctly-in-agenda" aria-label="Permalink to &quot;Chinese characters are not displayed correctly in agenda&quot;">â€‹</a></h2><p>In case you use chinese characters in your Neovim, and characters appear as encoded, try setting the language to <code>zh_CN.UTF-8</code> with the same command as above:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vim.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;language zh_CN.utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>See related issue: <a href="https://github.com/nvim-orgmode/orgmode/issues/879" target="_blank" rel="noreferrer">https://github.com/nvim-orgmode/orgmode/issues/879</a></p><h2 id="links-are-not-concealed" tabindex="-1">Links are not concealed <a class="header-anchor" href="#links-are-not-concealed" aria-label="Permalink to &quot;Links are not concealed&quot;">â€‹</a></h2><p>Links are concealed with Vim&#39;s conceal feature (see <code>:help conceal</code>). To enable concealing, add this to your <code>init.lua</code>:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vim.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conceallevel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vim.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">concealcursor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;nc&#39;</span></span></code></pre></div><h2 id="jumping-to-file-path-is-not-working-for-paths-with-forward-slash" tabindex="-1">Jumping to file path is not working for paths with forward slash <a class="header-anchor" href="#jumping-to-file-path-is-not-working-for-paths-with-forward-slash" aria-label="Permalink to &quot;Jumping to file path is not working for paths with forward slash&quot;">â€‹</a></h2><p>If you are using Windows, paths are by default written with backslashes. To use forward slashes, you must enable <code>shellslash</code> option (see <code>:help shellslash</code>).</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vim.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shellslash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><p>More info on issue <a href="https://github.com/nvim-orgmode/orgmode/issues/281#issuecomment-1120200775" target="_blank" rel="noreferrer">#281</a></p>',28)]))}const k=i(n,[["render",r]]);export{g as __pageData,k as default};
